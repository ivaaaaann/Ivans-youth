---
import {type CollectionEntry, getCollection} from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import TableOfContents from '../../components/common/TableOfContents/index.tsx';
import '../../styles/markdown.css';
import PostSummary from '../../components/post/PostSummary/index.astro';
import {contentContainerStyle, sectionContainerStyle} from './index.css';
import {convert} from '../../utils/functions/convert';
import {GET} from '../api/views';

export const getStaticPaths = async () => {
  const posts = await getCollection('blog');

  return posts.map((post) => ({
    params: {slug: post.slug},
    props: post,
  }));
};

type Props = CollectionEntry<'blog'>;

const post = Astro.props;

const {Content} = await post.render();

const viewCountResponse = await GET({
  ...Astro,
  params: {
    slug: post.slug,
  },
});

const viewCountData = await viewCountResponse.json();
---

<Layout pageTitle={post.data.title}>
  <section class={sectionContainerStyle}>
    <article id="markdown-container" class={contentContainerStyle}>
      <PostSummary post={post} viewCount={viewCountData.data.count ?? 0} />
      <Content />
    </article>
    {
      convert(Content, (Content) => (
        <TableOfContents>
          <Content />
        </TableOfContents>
      ))
    }
  </section>
</Layout>
